//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity boardEntity { get { return GetGroup(GameMatcher.Board).GetSingleEntity(); } }
    public Game.BoardComponent board { get { return boardEntity.board; } }
    public bool hasBoard { get { return boardEntity != null; } }

    public GameEntity SetBoard(Game.LevelBlueprint newValue) {
        if (hasBoard) {
            throw new Entitas.EntitasException("Could not set Board!\n" + this + " already has an entity with Game.BoardComponent!",
                "You should check if the context already has a boardEntity before setting it or use context.ReplaceBoard().");
        }
        var entity = CreateEntity();
        entity.AddBoard(newValue);
        return entity;
    }

    public void ReplaceBoard(Game.LevelBlueprint newValue) {
        var entity = boardEntity;
        if (entity == null) {
            entity = SetBoard(newValue);
        } else {
            entity.ReplaceBoard(newValue);
        }
    }

    public void RemoveBoard() {
        boardEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.BoardComponent board { get { return (Game.BoardComponent)GetComponent(GameComponentsLookup.Board); } }
    public bool hasBoard { get { return HasComponent(GameComponentsLookup.Board); } }

    public void AddBoard(Game.LevelBlueprint newValue) {
        var index = GameComponentsLookup.Board;
        var component = CreateComponent<Game.BoardComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBoard(Game.LevelBlueprint newValue) {
        var index = GameComponentsLookup.Board;
        var component = CreateComponent<Game.BoardComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBoard() {
        RemoveComponent(GameComponentsLookup.Board);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBoard;

    public static Entitas.IMatcher<GameEntity> Board {
        get {
            if (_matcherBoard == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Board);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBoard = matcher;
            }

            return _matcherBoard;
        }
    }
}
