//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity configEntity { get { return GetGroup(GameMatcher.Config).GetSingleEntity(); } }
    public Game.ConfigComponent config { get { return configEntity.config; } }
    public bool hasConfig { get { return configEntity != null; } }

    public GameEntity SetConfig(Game.GameConfigBlueprint newValue) {
        if (hasConfig) {
            throw new Entitas.EntitasException("Could not set Config!\n" + this + " already has an entity with Game.ConfigComponent!",
                "You should check if the context already has a configEntity before setting it or use context.ReplaceConfig().");
        }
        var entity = CreateEntity();
        entity.AddConfig(newValue);
        return entity;
    }

    public void ReplaceConfig(Game.GameConfigBlueprint newValue) {
        var entity = configEntity;
        if (entity == null) {
            entity = SetConfig(newValue);
        } else {
            entity.ReplaceConfig(newValue);
        }
    }

    public void RemoveConfig() {
        configEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.ConfigComponent config { get { return (Game.ConfigComponent)GetComponent(GameComponentsLookup.Config); } }
    public bool hasConfig { get { return HasComponent(GameComponentsLookup.Config); } }

    public void AddConfig(Game.GameConfigBlueprint newValue) {
        var index = GameComponentsLookup.Config;
        var component = CreateComponent<Game.ConfigComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceConfig(Game.GameConfigBlueprint newValue) {
        var index = GameComponentsLookup.Config;
        var component = CreateComponent<Game.ConfigComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveConfig() {
        RemoveComponent(GameComponentsLookup.Config);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherConfig;

    public static Entitas.IMatcher<GameEntity> Config {
        get {
            if (_matcherConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Config);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherConfig = matcher;
            }

            return _matcherConfig;
        }
    }
}
